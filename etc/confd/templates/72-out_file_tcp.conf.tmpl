## Option to write remote logs to plain files
# also check config in ##_remote_in.conf for wrapping ruleset that calls this
# Note, if enabled in conjunciton with forwading to logstash/elasticsearch, then
# we're doubling up logs and I/O load...

template(name="TmplPerHostTcpAuthFile" type="string" string="/var/log/remote/tcp/%HOSTNAME%/security")
template(name="TmplPerHostTcpAuditFile" type="string" string="/var/log/remote/tcp/%HOSTNAME%/audit")
template(name="TmplPerHostTcpConsoleFile" type="string" string="/var/log/remote/tcp/%HOSTNAME%/console")
template(name="TmplPerHostTcpFirewallFile" type="string" string="/var/log/remote/tcp/%HOSTNAME%/firewall")
template(name="TmplPerHostTcpMsgFile" type="string" string="/var/log/remote/tcp/%HOSTNAME%/messages")

ruleset(name="out_file_tcp")
{
  if ($syslogfacility-text == 'kern' and (
	$msg startswith "iptables" or
	$msg contains"[UFW"
	)
  ) then
  {  action(
       name="remote_file_auth"
       type="omfile"
       template="{{ getenv "rsyslog_omfile_template" }}"
       dynaFile="TmplPerHostTcpFirewallFile"
       dynaFileCacheSize="100"
       asyncWriting="on"
       flushOnTXEnd="off"
       ioBufferSize="64k"
       dirOwner="root"
       dirGroup="wheel"
       dirCreateMode="0755"
       fileOwner="root"
       fileGroup="wheel"
       FileCreateMode="0640"
     )
  }
  else
  {
    # auth and authpriv
    if ($syslogfacility-text == 'auth' or
         $syslogfacility-text == 'authpriv'
    ) then
    {
      action(
        name="remote_file_auth"
        type="omfile"
	      template="{{ getenv "rsyslog_omfile_template" }}"
        dynaFile="TmplPerHostTcpAuthFile"
        dynaFileCacheSize="100"
        asyncWriting="on"
        flushOnTXEnd="off"
        ioBufferSize="64k"
        dirOwner="root"
        dirGroup="wheel"
        dirCreateMode="0755"
        fileOwner="root"
        fileGroup="wheel"
        FileCreateMode="0640"
      )
    }

    if ($syslogfacility == '13') then
    {
      action(
        name="remote_file_audit"
        type="omfile"
        template="{{ getenv "rsyslog_omfile_template" }}"
        dynaFile="TmplPerHostTcpAuditFile"
        dynaFileCacheSize="100"
        asyncWriting="on"
        flushOnTXEnd="off"
        ioBufferSize="64k"
        dirOwner="root"
        dirGroup="wheel"
        dirCreateMode="0755"
        fileOwner="root"
        fileGroup="wheel"
        FileCreateMode="0640"
     )
    }

    # logalert. Note, no formal syslog faciltiy keyword supported by rsyslog
    if ($syslogfacility == '14') then
    {
      action(
        name="remote_file_console"
        type="omfile"
	template="{{ getenv "rsyslog_omfile_template" }}"
        dynaFile="TmplPerHostTcpConsoleFile"
        dynaFileCacheSize="100"
        asyncWriting="on"
        flushOnTXEnd="off"
        ioBufferSize="64k"
        dirOwner="root"
        dirGroup="wheel"
        dirCreateMode="0755"
        fileOwner="root"
        fileGroup="wheel"
        FileCreateMode="0640"
     )
    }

    # other
    if not
    ( $syslogfacility-text == 'auth' or
      $syslogfacility-text == 'authpriv' or
      $syslogfacility == '13'
    )
    then
    {
      action(
        name="remote_file_messages"
        type="omfile"
	template="{{ getenv "rsyslog_omfile_template" }}"
        dynaFile="TmplPerHostTcpMsgFile"
        dynaFileCacheSize="100"
        asyncWriting="on"
        flushOnTXEnd="off"
        ioBufferSize="64k"
        dirOwner="root"
        dirGroup="wheel"
        dirCreateMode="0755"
        fileOwner="root"
        fileGroup="wheel"
        FileCreateMode="0640"
     )
    }
  }
}

# Note further, it would be prudent to setup logrotate for /var/log/remote/*
