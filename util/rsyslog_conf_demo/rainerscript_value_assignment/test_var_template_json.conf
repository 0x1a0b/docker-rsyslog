# Demo for https://github.com/rsyslog/rsyslog/issues/2827
# Unclear how to assign and output non-string JSON data types like boolean, null or numeric
# Can test via logger, e.g. logger -u /var/lib/rsyslog/test -t test "test JSON types"
# Or a file read into a the unix socket: while IFS='' read -r rawmsg || [[ -n "$rawmsg" ]]; do echo $rawmsg | nc -uU /var/lib/rsyslog/test; done < test.log

module(load="mmpstrucdata")

input(
  type="imuxsock"
  Socket="/var/lib/rsyslog/test"
  ruleset="test"
)

template(
  name="TmplRSyslogJSON"
  type="string"
  string="%jsonmesg%\n"
)
template(
  name="TmplJSON"
  type="string"
  string="{%msg:::jsonf%, %rawmsg:::jsonf%, %timereported:::jsonf%, %hostname:::jsonf%, %syslogtag:::jsonf%, %inputname:::jsonf%, %fromhost:::jsonf%, %fromhost-ip:::jsonf%, %pri:::jsonf%, %syslogfacility:::jsonf%, %syslogseverity:::jsonf%, %timegenerated:::jsonf%, %programname:::jsonf%, %protocol-version:::jsonf%, %structured-data:::jsonf%, %app-name:::jsonf%, %procid:::jsonf%, %msgid:::jsonf%, %uuid:::jsonf%, \"$!\": { \"rfc5424-sd\": %$!rfc5424-sd%, \"bool_true\": %$!bool_true%, \"bool_false\": %$!bool_false%, \"bool_true_coerced\": %$!bool_true_coerced% } }\n"
)
template(name="set_true" type="list") {
  constant(value="true")
}

ruleset(name="test") {
  # Parse RFC5424 structured elements into JSON
  action(type="mmpstrucdata")
  # Set proper JSON null representation if there was no structured data
  if ($structured-data == "-") then {
    set $!rfc5424-sd = "null";
  }

  set $!bool_true = exec_template("set_true");
  set $!bool_false = "false";
  set $!bool_true_coerced = (1 == 1);
  action(
    type="omfile"
    template="TmplRSyslogJSON"
    file="/tmp/rsyslog.json"
  )
  action(
    type="omfile"
    template="TmplJSON"
    file="/tmp/coerced.json"
  )
}
